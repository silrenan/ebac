# Node.

    $ sudo apt install nodejs
    $ sudo apt install npm
    $ sudo apt install -g n
    $ sudo apt install -g npm
    $ sudo apt purge nodejs
    $ sudo n lts
    $ node --version
    $ npm --version
    $ n --version

# JDK, SDK, ADB.

    $ sudo apt install adb
    $ sudo apt install openjdk-19-jdk
    $ echo 'JAVA_HOME=/usr/lib/jvm/java-19-openjdk-amd64/' >> ~/.bashrc
    $ flatpak install app/com.google.AndroidStudio/x86_64/stable
    $ echo 'ANDROID_HOME=/home/$user$/Android/Sdk/' >> ~/.bashrc
    $ source ~/.bashrc

    // open android studio.
    |_ more actions.
    |_ android sdk.
    |_ unhide obsolete packages.
    |_ sdk tools (select all).

# Appium Doctor, Appium Server, Appium Inspector, APK, WDIO.

    $ mkdir ~/ebac/module-16
    $ cd ~/ebac/module-16
    $ mkdir apps
    $ npm init -y
    $ npm install appium-doctor
    $ wget https://github.com/woocommerce/woocommerce-android/releases/download/14.4/wcandroid-14.4.apk
    $ mv wcandroid-14.4.apk apps/woo.apk
    $ wget https://github.com/appium/appium-desktop/releases/download/v1.22.3-4/Appium-Server-GUI-linux-1.22.3-4.AppImage
    $ mv Appium-Server-GUI-linux-1.22.3-4.AppImage apps/appium.AppImage
    $ wget https://github.com/appium/appium-inspector/releases/download/v2023.7.1/Appium-Inspector-linux-2023.7.1.AppImage
    $ mv Appium-Inspector-linux-2023.7.1.AppImage apps/inspector.AppImage
    $ printf '# apks\napps/*\n' >> .gitignore
    $ chmod +x ./apps/*.AppImage
    $ npm install wdio
    $ npx wdio config
        Yes
        E2E testing
        Local machine
        Mobile
        Android
        Mocha
        No
        Yes
        <enter>
        Yes
        <enter>
        spec
        wait-for
        appium
        Yes
        Yes
        Exit
    $ rm test/pageobjects/* test/specs/*
    $ npx appium-doctor
    $ npx appium --allow-insecure chromedriver_autodownload

# Test Emulation.

    // Have the following wdio.conf.js:

    $ cat wdio.conf.js 
        exports.config = {
            hostname: 'localhost',
            port: 4723,
            path: '/wd/hub',
            specs: ['./test/specs/**/*.js'],
            framework: 'mocha',
            capabilities: [{
                "platformName": "Android",
                "platformVersion": "12",
                "deviceName": "Test",
                "automationName": "UiAutomator2",
                "appPackage": "com.wdiodemoapp",
                "appActivity": ".MainActivity",
                "appWaitActivity": "com.woocommerce.android.ui.login.LoginActivity"
            }]
        }

    // On Android Studio, create an Pixel 2 Android 12, start the created device.
    // On Android Emulator, drop the woo.apk, it will install it.

    $ ./apps/appium.AppImage
    $ ./apps/inspector.Appimage

    // On Inspector [Remote Path : /wd/hub] and:
        {
        "platformName": "Android",
        "appium:platformVersion": "12",
        "appium:deviceName": "Test",
        "appium:automationName": "UiAutomator2",
        "appium:appPackage": "com.wdiodemoapp",
        "appium:appActivity": ".MainActivity"
        }

    // On Inspector, hit the Save and Start Session.

# Module-16 Final Task.

    $ wget https://github.com/webdriverio/native-demo-app/releases/download/v0.4.0/Android-NativeDemoApp-0.4.0.apk
    $ mv Android-NativeDemoApp-0.4.0.apk apps/native.apk

    // open Android Emulator, Virtual Device Manager and copy [.apps/native.apk] to the emulation, creating a shortcut on the main screen.
    // task.spec.js should contain:
    
    describe('module 16 task', function() {
    it('should complete module 16 task', async function() {
        setTimeout(()=>{
            console.log('abriu')
        }, 10000)
    });
    })

    $ ./apps/appium.AppImage
    $ ./apps/inspector.Appimage
    $ npm run wdio (.conf.js)
    